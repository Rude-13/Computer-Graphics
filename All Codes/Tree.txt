#include <windows.h>  // for MS Windows
#include <GL/glut.h>  // GLUT, include glu.h and gl.h
#include <math.h>
void circle(float radius, float xc, float yc, float r, float g, float b)
{
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
	for(int i=0;i<200;i++)
        {
            glColor3f(r,g,b);
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r=radius;
            float x = r * cos(A);
            float y = r * sin(A);
            glVertex2f(x+xc,y+yc);
        }
	glEnd();
}

/* Initialize OpenGL Graphics */
void initGL() {
	// Set "clearing" or background color
	glClearColor(0.0f, 0.0f, 0.0f, 1.0f); // Black and opaque
}

/* Handler for window-repaint event. Call back when the window first appears and
whenever the window needs to be re-painted. */
void display() {
	glClear(GL_COLOR_BUFFER_BIT);   // Clear the color buffer with current clearing color


	glClearColor(0.0f, 0.0f, 0.0f, 1.0f); // Set background color to black and opaque
	glClear(GL_COLOR_BUFFER_BIT);         // Clear the color buffer (background)
	glLineWidth(7.5);

    circle(0.08,-0.55,0.05,0.01,0.25,0.13);

	circle(0.1,-0.5,0.3,0.01,0.15,0.13);

	circle(0.08,-0.45,0.07,0.01,0.15,0.13);

    circle(0.15,-0.4,0.2,0.01,0.25,0.13);

	circle(0.15,-0.59,0.2,0.01,0.19,0.13);

    circle(0.1,-0.43,0.2,0.01,0.19,0.13);



    glBegin(GL_POLYGON); //tree
	glColor3f(0.4f, 0.18f, 0.0f);
	glVertex2f(-0.45f, 0.2f);
	glVertex2f(-0.42f, 0.2f);
	glVertex2f(-0.5f, -0.2f);
	glVertex2f(-0.6f, -0.2f);

	glEnd();


    glBegin(GL_POLYGON); //tree
	glColor3f(0.4f, 0.18f, 0.0f);
	glVertex2f(-0.55f, 0.2f);
	glVertex2f(-0.57f, 0.2f);
	glVertex2f(-0.5f, -0.2f);
	glVertex2f(-0.45f, -0.2f);


	glEnd();


	glFlush();  // Render now
}

/* Main function: GLUT runs as a console application starting at main()  */
int main(int argc, char** argv) {
	glutInit(&argc, argv);
	glutInitWindowSize(1000, 1000);          // Initialize GLUT
	glutCreateWindow("Vertex, Primitive & Color");  // Create window with the given title// Set the window's initial width & height
	glutInitWindowPosition(50, 50); // Position the window's initial top-left corner
	glutDisplayFunc(display);       // Register callback handler for window re-paint event
	initGL();                       // Our own OpenGL initialization
	glutMainLoop();                 // Enter the event-processing loop
	return 0;
}
