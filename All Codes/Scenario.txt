#include <windows.h>  // for MS Windows
#include <GL/glut.h>  // GLUT, include glu.h and gl.h
#include <math.h>
void circle(float radius, float xc, float yc, float r, float g, float b)
{
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
	for(int i=0;i<200;i++)
        {
            glColor3f(r,g,b);
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r=radius;
            float x = r * cos(A);
            float y = r * sin(A);
            glVertex2f(x+xc,y+yc);
        }
	glEnd();
}

/* Initialize OpenGL Graphics */
void initGL() {
	// Set "clearing" or background color
	glClearColor(0.0f, 0.0f, 0.0f, 1.0f); // Black and opaque
}

/* Handler for window-repaint event. Call back when the window first appears and
whenever the window needs to be re-painted. */
void display() {
	glClear(GL_COLOR_BUFFER_BIT);   // Clear the color buffer with current clearing color

    glClearColor(0.0f, 0.0f, 0.0f, 1.0f); // Set background color to black and opaque
    glClear(GL_COLOR_BUFFER_BIT);         // Clear the color buffer (background)
	glLineWidth(7.5);

	//========================================================================

	glBegin(GL_POLYGON); //sky
	glColor3f(0.0f,0.0,0.17f);
	glVertex2f(-1.0f, 1.0f);
	glVertex2f(1.0, 1.0f);
	glVertex2f(1.0f, 0.1f);
	glVertex2f(-1.0f, 0.1f);

	glEnd();


	//============================================================================





    glBegin(GL_POLYGON); //grass
	glColor3f(0.01f,0.3,0.13f);
	glVertex2f(-1.0f, 0.1f);
	glVertex2f(1.0, 0.1f);
	glVertex2f(1.0f, -0.3f);
	glVertex2f(-1.0f, -0.3f);

	glEnd();



	glBegin(GL_POLYGON); //grass
	glColor3f(0.01f,0.3,0.13f);
	glVertex2f(-1.0f, -0.8f);
	glVertex2f(1.0, -0.8f);
	glVertex2f(1.0f, -1.0f);
	glVertex2f(-1.0f, -1.0f);

	glEnd();


    //-----------------------------------------------------------------------------
	//-----------------------------------------------------------------------------





    circle(0.08,-0.55,0.05,0.01,0.25,0.13);

	circle(0.1,-0.5,0.3,0.01,0.15,0.13);

	circle(0.08,-0.45,0.07,0.01,0.15,0.13);

    circle(0.15,-0.4,0.2,0.01,0.25,0.13);

	circle(0.15,-0.59,0.2,0.01,0.19,0.13);

    circle(0.1,-0.43,0.2,0.01,0.19,0.13);





    circle(0.09,-0.05,0.85,1.0,1.0,1.0);//moon

    circle(0.1,-0.09,0.88,0.0,0.0,0.17); //moon

    circle(0.002,-0.4,0.9,1.0,1.0,1.0); //star

    circle(0.002,-0.8,0.7,1.0,1.0,1.0); //star

    circle(0.002,-0.2,0.88,1.0,1.0,1.0); //star

    circle(0.003,-0.5,0.6,1.0,1.0,1.0); //star

    circle(0.003,-0.2,0.6,1.0,1.0,1.0); //star

    circle(0.003,0.95,0.9,1.0,1.0,1.0); //star

    circle(0.002,0.9,0.85,1.0,1.0,1.0); //star

    circle(0.002,0.2,0.9,1.0,1.0,1.0); //star





    glBegin(GL_POLYGON); //tree
	glColor3f(0.4f, 0.18f, 0.0f);
	glVertex2f(-0.45f, 0.2f);
	glVertex2f(-0.42f, 0.2f);
	glVertex2f(-0.5f, -0.2f);
	glVertex2f(-0.6f, -0.2f);

	glEnd();





    glBegin(GL_POLYGON); //tree
	glColor3f(0.4f, 0.18f, 0.0f);
	glVertex2f(-0.55f, 0.2f);
	glVertex2f(-0.57f, 0.2f);
	glVertex2f(-0.5f, -0.2f);
	glVertex2f(-0.45f, -0.2f);


	glEnd();


	 //--------------------------------------------------------------------------
	//--------------------------------------------------------------------------



    glBegin(GL_POLYGON); //road
	glColor3f(0.17f, 0.18f, 0.2f);
	glVertex2f(-1.0f, -0.3f);
	glVertex2f(1.0, -0.3f);
	glVertex2f(1.0f, -0.8f);
	glVertex2f(-1.0f, -0.8f);

	glEnd();



	glBegin(GL_POLYGON); //road
	glColor3f(1.0f, 1.0f, 0.0f);
	glVertex2f(-1.0f, -0.52f);
	glVertex2f(1.0, -0.52f);
	glVertex2f(1.0f, -0.53f);
	glVertex2f(-1.0f, -0.53f);

	glEnd();




	//-----------------------------------------------------------------------------
	//-----------------------------------------------------------------------------


	glBegin(GL_POLYGON); //4th
	glColor3f(0.35f, 0.35f, 0.35f);
	glVertex2f(0.3f, 0.8f);
	glVertex2f(0.9f, 0.8f);
	glVertex2f(0.9f, 0.6f);
	glVertex2f(0.3f, 0.6f);

	glEnd();


	glBegin(GL_POLYGON); //3th
	glColor3f(0.25f, 0.25f, 0.25f);
	glVertex2f(0.3f, 0.6f);
	glVertex2f(0.9f, 0.6f);
	glVertex2f(0.9f, 0.4f);
	glVertex2f(0.3f, 0.4f);

	glEnd();


	glBegin(GL_POLYGON); //2rd
	glColor3f(0.35f, 0.35f, 0.35f);
	glVertex2f(0.3f, 0.4f);
	glVertex2f(0.9f, 0.4f);
	glVertex2f(0.9f, 0.2f);
	glVertex2f(0.3f, 0.2f);

	glEnd();


	glBegin(GL_POLYGON); //1st
	glColor3f(0.25f, 0.25f, 0.25f);
	glVertex2f(0.3f, 0.2f);
	glVertex2f(0.9f, 0.2f);
	glVertex2f(0.9f, 0.0f);
	glVertex2f(0.3f, 0.0f);

	glEnd();


	glBegin(GL_POLYGON); //ground
	glColor3f(0.35f, 0.35f, 0.35f);
	glVertex2f(0.3f, 0.0f);
	glVertex2f(0.9f, 0.0f);
	glVertex2f(0.9f, -0.2f);
	glVertex2f(0.3f, -0.2f);

	glEnd();


	glBegin(GL_POLYGON); //door
	glColor3f(0.7f, 0.3f, 0.2f);
	glVertex2f(0.55f, -0.1f);
	glVertex2f(0.65f, -0.1f);
	glVertex2f(0.65f, -0.2f);
	glVertex2f(0.55f, -0.2f);

	glEnd();

    /*
	glBegin(GL_POLYGON); //wg1
	glColor3f(1.0f, 1.0f, 0.0f);
	glVertex2f(0.37f, -0.03f);
	glVertex2f(0.47f, -0.03f);
	glVertex2f(0.47f, -0.13f);
	glVertex2f(0.37f, -0.13f);

	glEnd();


    glBegin(GL_POLYGON); //wg2
	glColor3f(1.0f, 1.0f, 0.0f);
	glVertex2f(0.73f, -0.03f);
	glVertex2f(0.83f, -0.03f);
	glVertex2f(0.83f, -0.13f);
	glVertex2f(0.73f, -0.13f);

	glEnd();
	*/

	glBegin(GL_POLYGON); //w11
	glColor3f(1.0f, 1.0f, 0.0f);
	glVertex2f(0.37f, 0.17f);
	glVertex2f(0.47f, 0.17f);
	glVertex2f(0.47f, 0.07f);
	glVertex2f(0.37f, 0.07f);

	glEnd();


    glBegin(GL_POLYGON); //w12
	glColor3f(1.0f, 1.0f, 0.0f);
	glVertex2f(0.73f, 0.17f);
	glVertex2f(0.83f, 0.17f);
	glVertex2f(0.83f, 0.07f);
	glVertex2f(0.73f, 0.07f);

	glEnd();


	glBegin(GL_POLYGON); //w21
	glColor3f(1.0f, 1.0f, 0.0f);
	glVertex2f(0.37f, 0.37f);
	glVertex2f(0.47f, 0.37f);
	glVertex2f(0.47f, 0.27f);
	glVertex2f(0.37f, 0.27f);

	glEnd();


    glBegin(GL_POLYGON); //w22
	glColor3f(1.0f, 1.0f, 0.0f);
	glVertex2f(0.73f, 0.37f);
	glVertex2f(0.83f, 0.37f);
	glVertex2f(0.83f, 0.27f);
	glVertex2f(0.73f, 0.27f);

	glEnd();

	glBegin(GL_POLYGON); //w31
	glColor3f(1.0f, 1.0f, 0.0f);
	glVertex2f(0.37f, 0.57f);
	glVertex2f(0.47f, 0.57f);
	glVertex2f(0.47f, 0.47f);
	glVertex2f(0.37f, 0.47f);

	glEnd();


    glBegin(GL_POLYGON); //w32
	glColor3f(1.0f, 1.0f, 0.0f);
	glVertex2f(0.73f, 0.57f);
	glVertex2f(0.83f, 0.57f);
	glVertex2f(0.83f, 0.47f);
	glVertex2f(0.73f, 0.47f);

	glEnd();


	glBegin(GL_POLYGON); //w41
	glColor3f(1.0f, 1.0f, 0.0f);
	glVertex2f(0.37f, 0.77f);
	glVertex2f(0.47f, 0.77f);
	glVertex2f(0.47f, 0.67f);
	glVertex2f(0.37f, 0.67f);

	glEnd();


    glBegin(GL_POLYGON); //w42
	glColor3f(1.0f, 1.0f, 0.0f);
	glVertex2f(0.73f, 0.77f);
	glVertex2f(0.83f, 0.77f);
	glVertex2f(0.83f, 0.67f);
	glVertex2f(0.73f, 0.67f);

	glEnd();

	//------------------------------------------------------------------------------------------------------
	//------------------------------------------------------------------------------------------------------




	glBegin(GL_POLYGON); //lamppost
	glColor3f(0.35f, 0.35f, 0.35f);
	glVertex2f(0.152f, 0.2f);
	glVertex2f(0.158f, 0.2f);
	glVertex2f(0.16f, -0.2f);
	glVertex2f(0.15f, -0.2f);

	glEnd();


	glBegin(GL_POLYGON); //lamppost
	glColor3f(0.35f, 0.35f, 0.35f);
	glVertex2f(0.05f, 0.2f);
	glVertex2f(0.17f, 0.2f);
	glVertex2f(0.17f, 0.205f);
	glVertex2f(0.05f, 0.205f);

	glEnd();


	glBegin(GL_POLYGON); //lamppost
	glColor3f(1.0f, 1.0f, 0.0f);
	glVertex2f(0.05f, 0.2f);
	glVertex2f(0.07f, 0.2f);
	glVertex2f(0.068f, 0.19f);
	glVertex2f(0.052f, 0.19f);

	glEnd();

	//--------------------------------------------------------------------------------------------------------------
	//--------------------------------------------------------------------------------------------------------------


    glBegin(GL_POLYGON); //BENCH
	glColor3f(0.4f, 0.15f, 0.0f);
	glVertex2f(-0.24f, -0.2f);
	glVertex2f(-0.23f, -0.2f);
	glVertex2f(-0.23f, -0.15f);
	glVertex2f(-0.24f, -0.15f);

	glEnd();

	glBegin(GL_POLYGON); //BENCH
	glColor3f(0.4f, 0.15f, 0.0f);
	glVertex2f(0.09f, -0.2f);
	glVertex2f(0.08f, -0.2f);
	glVertex2f(0.08f, -0.15f);
	glVertex2f(0.09f, -0.15f);

	glEnd();


    glBegin(GL_POLYGON); //BENCH
	glColor3f(0.4f, 0.15f, 0.0f);
	glVertex2f(-0.3f, -0.17f);
	glVertex2f(0.05f, -0.17f);
	glVertex2f(0.1f, -0.15f);
	glVertex2f(-0.25f, -0.15f);

	glEnd();


	glBegin(GL_POLYGON); //BENCH
	glColor3f(0.4f, 0.2f, 0.0f);
	glVertex2f(0.1f, -0.1f);
	glVertex2f(-0.25f, -0.1f);
	glVertex2f(-0.25f, -0.15f);
	glVertex2f(0.1f, -0.15f);

	glEnd();






	glBegin(GL_POLYGON); //BENCH
	glColor3f(0.4f, 0.18f, 0.0f);
	glVertex2f(0.03f, -0.22f);
	glVertex2f(0.04f, -0.22f);
	glVertex2f(0.04f, -0.17f);
	glVertex2f(0.03f, -0.17f);

	glEnd();


    glBegin(GL_POLYGON); //BENCH
	glColor3f(0.4f, 0.18f, 0.0f);
	glVertex2f(-0.29f, -0.22f);
	glVertex2f(-0.28f, -0.22f);
	glVertex2f(-0.28f, -0.17f);
	glVertex2f(-0.29f, -0.17f);

	glEnd();


	glFlush();  // Render now
}

/* Main function: GLUT runs as a console application starting at main()  */
int main(int argc, char** argv) {
	glutInit(&argc, argv);
	glutInitWindowSize(1000, 1000);          // Initialize GLUT
	glutCreateWindow("Vertex, Primitive & Color");  // Create window with the given title// Set the window's initial width & height
	glutInitWindowPosition(50, 50); // Position the window's initial top-left corner
	glutDisplayFunc(display);       // Register callback handler for window re-paint event
	initGL();                       // Our own OpenGL initialization
	glutMainLoop();                 // Enter the event-processing loop
	return 0;
}
