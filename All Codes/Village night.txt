#include <windows.h>  // for MS Windows
#include <GL/glut.h>  // GLUT, include glu.h and gl.h
#include <math.h>
void circle(float radius, float xc, float yc, float r, float g, float b)
{
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
	for(int i=0;i<200;i++)
        {
            glColor3f(r,g,b);
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r=radius;
            float x = r * cos(A);
            float y = r * sin(A);
            glVertex2f(x+xc,y+yc);
        }
	glEnd();
}

/* Initialize OpenGL Graphics */
void initGL() {
	// Set "clearing" or background color
	glClearColor(0.0f, 0.0f, 0.0f, 1.0f); // Black and opaque
}

/* Handler for window-repaint event. Call back when the window first appears and
whenever the window needs to be re-painted. */
void display() {
	glClear(GL_COLOR_BUFFER_BIT);   // Clear the color buffer with current clearing color

    glClearColor(0.0f, 0.0f, 0.0f, 1.0f); // Set background color to black and opaque
    glClear(GL_COLOR_BUFFER_BIT);         // Clear the color buffer (background)
	glLineWidth(7.5);

	//========================================================================

	glBegin(GL_POLYGON); //sky
	glColor3f(0.0f,0.0,0.17f);
	glVertex2f(-1.0f, 1.0f);
	glVertex2f(1.0, 1.0f);
	glVertex2f(1.0f, 0.1f);
	glVertex2f(-1.0f, 0.1f);

	glEnd();


	//============================================================================




	glBegin(GL_POLYGON); //road
	glColor3f(0.01,0.08,0.13);
	glVertex2f(-1.0f, 0.3f);
	glVertex2f(-0.8, 0.55f);
	glVertex2f(-0.61f, 0.3);

	glEnd();

	glBegin(GL_POLYGON); //road
	glColor3f(0.01,0.1,0.13);
	glVertex2f(-0.8f, 0.2f);
	glVertex2f(-0.59, 0.5f);
	glVertex2f(-0.41f, 0.2);

	glEnd();


	glBegin(GL_POLYGON); //road
	glColor3f(0.01,0.15,0.13);
	glVertex2f(-1.2f, 0.2f);
	glVertex2f(-0.9, 0.6f);
	glVertex2f(-0.6f, 0.2);

	glEnd();

	glBegin(GL_POLYGON); //road
	glColor3f(0.01,0.19,0.13);
	glVertex2f(-0.94f, 0.2f);
	glVertex2f(-0.7, 0.6f);
	glVertex2f(-0.44f, 0.2);

	glEnd();

	glBegin(GL_POLYGON); //road
	glColor3f(0.01,0.15,0.13);
	glVertex2f(-0.7f, 0.2f);
	glVertex2f(-0.52, 0.5f);
	glVertex2f(-0.35f, 0.2);

	glEnd();


	glBegin(GL_POLYGON); //road
	glColor3f(0.01,0.25,0.13);
	glVertex2f(-1.05f, 0.2f);
	glVertex2f(-0.9, 0.4f);
	glVertex2f(-0.75f, 0.2);

	glEnd();






	//-----------------------------------------------------------------------------


	 circle(0.08,-0.98,0.25,0.01,0.15,0.13);
	 circle(0.07,-0.9,0.2,0.01,0.15,0.13);


	 circle(0.08,-0.78,0.25,0.01,0.15,0.13);
	 circle(0.07,-0.7,0.2,0.01,0.15,0.13);

	 circle(0.08,-0.58,0.25,0.01,0.15,0.13);
	 circle(0.07,-0.5,0.2,0.01,0.15,0.13);

	 circle(0.08,-0.38,0.25,0.01,0.15,0.13);
	 circle(0.07,-0.3,0.2,0.01,0.15,0.13);


	 circle(0.08,-0.18,0.25,0.01,0.15,0.13);
	 circle(0.07,-0.1,0.2,0.01,0.15,0.13);

	 circle(0.08,0.02,0.25,0.01,0.15,0.13);
	 circle(0.07,0.1,0.2,0.01,0.15,0.13);

	 circle(0.08,0.22,0.25,0.01,0.15,0.13);
	 circle(0.07,0.33,0.2,0.01,0.15,0.13);


	 circle(0.08,0.42,0.25,0.01,0.15,0.13);
	 circle(0.07,0.53,0.2,0.01,0.15,0.13);
	 circle(0.07,0.63,0.2,0.01,0.15,0.13);


	 circle(0.08,0.95,0.25,0.01,0.15,0.13);
	 circle(0.07,0.86,0.2,0.01,0.15,0.13);





	//---------------------------------------------------------------------------





    glBegin(GL_POLYGON); //road
	glColor3f(0.44f, 0.36f, 0.24f);
	glVertex2f(-1.0f, -0.3f);
	glVertex2f(1.0, -0.5f);
	glVertex2f(1.0f, -0.53);
	glVertex2f(-1.0f, -0.33f);










    glBegin(GL_POLYGON); //grass
	glColor3f(0.01f,0.2,0.13f);
	glVertex2f(-1.0f, 0.2f);
	glVertex2f(1.0, 0.2f);
	glVertex2f(1.0f, -0.5f);
	glVertex2f(-1.0f, -0.3f);


    glEnd();



    glBegin(GL_POLYGON); //grass
	glColor3f(0.44f, 0.36f, 0.24f);
	glVertex2f(0.72f, 0.2f);
	glVertex2f(0.78, 0.2f);
	glVertex2f(-0.2f, -0.5f);
	glVertex2f(-0.8f, -0.5f);


    glEnd();









    //-----------------------------------------------------------------------------


    glBegin(GL_POLYGON); //house
    glColor3f(0.44f, 0.36f, 0.24f);
    glVertex2f(-0.42f, -0.04f);
    glVertex2f(-0.42f, -0.1f);
    glVertex2f(-0.3f, -0.13f);
    glVertex2f(-0.3f, -0.04f);
    glVertex2f(-0.38f, 0.05f);
    glEnd();


    glBegin(GL_POLYGON); //window
    glColor3f(1.0f, 1.0, 0.0);
    glVertex2f(-0.38f, -0.035f);
    glVertex2f(-0.38f, -0.08f);
    glVertex2f(-0.345f, -0.087f);
    glVertex2f(-0.345f, -0.042f);
    glEnd();



    glBegin(GL_POLYGON); //1st
    glColor3f(0.44f, 0.33f, 0.24f);
    glVertex2f(-0.3f, -0.04f);
    glVertex2f(-0.3f, -0.13f);
    glVertex2f(-0.02f, -0.105f);
    glVertex2f(-0.02f, -0.04f);
    glEnd();

    glBegin(GL_POLYGON); //door
    glColor3f(0.161f, 0.0706, 0.0706);
    glVertex2f(-0.18f, -0.07f);
    glVertex2f(-0.18f, -0.12f);
    glVertex2f(-0.14f, -0.117f);
    glVertex2f(-0.14f, -0.0685f);
    glEnd();



    glBegin(GL_POLYGON); //1st
    glColor3f(0.35f, 0.35f, 0.35f);
    glVertex2f(-0.37f, 0.05f);
    glVertex2f(-0.4f, 0.05f);
    glVertex2f(-0.45f, -0.04f);
    glVertex2f(-0.42f, -0.04f);
    glEnd();


    glBegin(GL_POLYGON); //1st
    glColor3f(0.45f, 0.45f, 0.45f);
    glVertex2f(-0.15f, 0.05f);
    glVertex2f(-0.4f, 0.05f);
    glVertex2f(-0.3f, -0.05f);
    glVertex2f(-0.0f, -0.04f);
    glEnd();

    //----------------------------------------------------------------------------




    glBegin(GL_POLYGON); //house
    glColor3f(0.44f, 0.36f, 0.24f);
    glVertex2f(0.72f, -0.19f);
    glVertex2f(0.72f, -0.25f);
    glVertex2f(0.6f, -0.28f);
    glVertex2f(0.6f, -0.19f);
    glVertex2f(0.68f, -0.1f);
    glEnd();

    glBegin(GL_POLYGON); //window
    glColor3f(1.0f, 1.0, 0.0);
    glVertex2f(0.68f, -0.185f);
    glVertex2f(0.68f, -0.22f);
    glVertex2f(0.645f, -0.227f);
    glVertex2f(0.645f, -0.192f);
    glEnd();

    glBegin(GL_POLYGON); //1st
    glColor3f(0.44f, 0.33f, 0.24f);
    glVertex2f(0.6f, -0.19f);
    glVertex2f(0.6f, -0.28f);
    glVertex2f(0.32f, -0.255f);
    glVertex2f(0.32f, -0.19f);
    glEnd();

    glBegin(GL_POLYGON); //door
    glColor3f(0.161f, 0.0706, 0.0706);
    glVertex2f(0.48f, -0.22f);
    glVertex2f(0.48f, -0.27f);
    glVertex2f(0.44f, -0.265f);
    glVertex2f(0.44f, -0.2165f);
    glEnd();

    glBegin(GL_POLYGON); //1st
    glColor3f(0.35f, 0.35f, 0.35f);
    glVertex2f(0.67f, -0.1f);
    glVertex2f(0.7f, -0.1f);
    glVertex2f(0.75f, -0.19f);
    glVertex2f(0.72f, -0.19f);
    glEnd();

    glBegin(GL_POLYGON); //1st
    glColor3f(0.45f, 0.45f, 0.45f);
    glVertex2f(0.45f, -0.1f);
    glVertex2f(0.7f, -0.1f);
    glVertex2f(0.6f, -0.2f);
    glVertex2f(0.3f, -0.19f);
    glEnd();










	//--------------------------------------------------------------------


    glBegin(GL_POLYGON); //house
    glColor3f(0.44f, 0.36f, 0.24f);
    glVertex2f(0.19f, 0.18f);
    glVertex2f(0.19f, 0.14f);
    glVertex2f(0.25f, 0.13f);
    glVertex2f(0.25f, 0.18f);
    glVertex2f(0.21f, 0.225f);
    glEnd();

    glBegin(GL_POLYGON); //window
    glColor3f(1.0f, 1.0, 0.0);
    glVertex2f(0.21f, 0.185f);
    glVertex2f(0.21f, 0.16f);
    glVertex2f(0.2275f, 0.1585f);
    glVertex2f(0.2275f, 0.181f);
    glEnd();

    glBegin(GL_POLYGON); //1st
    glColor3f(0.44f, 0.33f, 0.24f);
    glVertex2f(0.25f, 0.18f);
    glVertex2f(0.25f, 0.13f);
    glVertex2f(0.39f, 0.1525f);
    glVertex2f(0.39f, 0.18f);
    glEnd();

    glBegin(GL_POLYGON); //door
    glColor3f(0.161f, 0.0706, 0.0706);
    glVertex2f(0.31f, 0.165f);
    glVertex2f(0.31f, 0.14f);
    glVertex2f(0.33f, 0.1415f);
    glVertex2f(0.33f, 0.16575f);
    glEnd();

    glBegin(GL_POLYGON); //1st
    glColor3f(0.35f, 0.35f, 0.35f);
    glVertex2f(0.215f, 0.225f);
    glVertex2f(0.2f, 0.225f);
    glVertex2f(0.175f, 0.18f);
    glVertex2f(0.19f, 0.18f);
    glEnd();

    glBegin(GL_POLYGON); //1st
    glColor3f(0.45f, 0.45f, 0.45f);
    glVertex2f(0.325f, 0.225f);
    glVertex2f(0.2f, 0.225f);
    glVertex2f(0.25f, 0.175f);
    glVertex2f(0.4f, 0.18f);
    glEnd();



	//----------------------------------------------------






    circle(0.05,0.6,0.85,1.0,1.0,1.0);//moon

    //circle(0.1,-0.09,0.88,0.0,0.0,0.17); //moon

    circle(0.002,-0.4,0.9,1.0,1.0,1.0); //star

    circle(0.002,-0.8,0.7,1.0,1.0,1.0); //star

    circle(0.002,-0.2,0.88,1.0,1.0,1.0); //star

    circle(0.003,-0.5,0.6,1.0,1.0,1.0); //star

    circle(0.003,-0.2,0.6,1.0,1.0,1.0); //star

    circle(0.003,0.95,0.9,1.0,1.0,1.0); //star

    circle(0.002,0.9,0.85,1.0,1.0,1.0); //star

    circle(0.002,0.2,0.9,1.0,1.0,1.0); //star





    circle(0.08,-0.65,0.05,0.01,0.25,0.13);

	circle(0.1,-0.6,0.3,0.01,0.15,0.13);

	circle(0.08,-0.55,0.07,0.01,0.15,0.13);

    circle(0.15,-0.5,0.2,0.01,0.25,0.13);

	circle(0.15,-0.69,0.2,0.01,0.19,0.13);

    circle(0.1,-0.53,0.2,0.01,0.19,0.13);











    glBegin(GL_POLYGON); //tree
	glColor3f(0.4f, 0.18f, 0.0f);
	glVertex2f(-0.55f, 0.2f);
	glVertex2f(-0.52f, 0.2f);
	glVertex2f(-0.6f, -0.2f);
	glVertex2f(-0.7f, -0.2f);

	glEnd();





    glBegin(GL_POLYGON); //tree
	glColor3f(0.4f, 0.18f, 0.0f);
	glVertex2f(-0.65f, 0.2f);
	glVertex2f(-0.67f, 0.2f);
	glVertex2f(-0.6f, -0.2f);
	glVertex2f(-0.55f, -0.2f);


	glEnd();








	//--------------------------------------------------------------------------



  	glBegin(GL_POLYGON); //river
	glColor3f(0.1411, 0.3059, 0.5412);
	glVertex2f(-1.0f, -0.3f);
	glVertex2f(1.0, -0.5f);
	glVertex2f(1.0f, -1.0f);
	glVertex2f(-1.0f, -1.0f);

	glEnd();


	glBegin(GL_POLYGON); //river side
	glColor3f(0.44f, 0.36f, 0.24f);
	glVertex2f(-1.0f, -0.3f);
	glVertex2f(1.0, -0.5f);
	glVertex2f(1.0f, -0.53);
	glVertex2f(-1.0f, -0.33f);

	glEnd();







	glFlush();  // Render now
}

/* Main function: GLUT runs as a console application starting at main()  */
int main(int argc, char** argv) {
	glutInit(&argc, argv);
	glutInitWindowSize(1100, 1000);          // Initialize GLUT
	glutCreateWindow("Vertex, Primitive & Color");  // Create window with the given title// Set the window's initial width & height
	glutInitWindowPosition(50, 50); // Position the window's initial top-left corner
	glutDisplayFunc(display);       // Register callback handler for window re-paint event
	initGL();                       // Our own OpenGL initialization
	glutMainLoop();                 // Enter the event-processing loop
	return 0;
}
